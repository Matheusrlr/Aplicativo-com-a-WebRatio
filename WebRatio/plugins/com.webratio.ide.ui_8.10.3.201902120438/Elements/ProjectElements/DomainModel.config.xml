<Element name="DomainModel" lowerName="domain model"
		pluralLowerName="">
		<Description>
		 The Domain Model describes the conceptual data organization; it is compatible 
		with the UML class diagrams.
		</Description>
		<ActionRef label="Remove Mapping" />
		<ActionRef label="Add Property" />
		<Action label="Add Class">
			Adds a new &lt;a href="/Reference/ElementsReference/DomainModelElements/Class"/&gt; 
			to the Domain Model
		</Action><ActionRef label="Add Database"/>
		<Action label="Add SubType">
			Adds a new &lt;a href="/Reference/ElementsReference/DomainModelElements/SubType"/&gt;
		</Action>
		<ActionRef label="Localize"/>
		<ActionRef label="Export Diagram Image..."/>
		<ActionRef label="Generate Selection"/>
		<ActionRef label="Find Model Problems"/>
		<ActionRef label="Help"/>
		<PropertyCategory name="Deployment">
			<Property label="Java Package Name">
			  The package name assigned to the class Java classes.
			</Property>
            <Property label="Use Pure Hibernate Classes">
              If not selected (default), for each association role a mock class, mapping the association 
              table and columns, is generated. This kind of classes have the purpose to generate HQL queries 
              able to reduce the number of JOINs between the involved tables.
              If selected, the HQL queries will be generated with the standard Hibernate approach using the 
              model classes only, and the association conditions are computed by navigating the 
              association roles properties. 
            </Property>
            <Property label="Use Qualified Classes">
            	If checked the fully class names will be used within the HQL queries. 
            	This flag permits to have several classes having the same name under different packages.
            	Pay attention that using qualified classes, hard coded HQL queries could became invalid. 
            </Property>
            <Property label="Java Beans Key Policy">
			  If set to &lt;b&gt;On Duplicate Error&lt;/b&gt;, an exception is thrown at run-time attempting 
			  to create an instance of a class using an existing primary key value. 
			  If set to &lt;b&gt;On Duplicate Generate Random&lt;/b&gt; (the default behaviour), in case of 
			  primary key violation the run-time engine replaces the passed primary key value 
			  with a randomly generated value. Note that this property is always ignored for classes
			  having composite primary keys: a run-time exception is thrown in case of primary key
			  violation (Java Beans storage only).
			</Property>
			<Property label="Application Database Connections">
			  The number of permitted connections to the volatile database having scope application.
			  If unspecified, a default value (15) is used.
			</Property>
			<Property label="Session Database Connections">
			  The number of permitted connections to the volatile database having scope session.
			  If unspecified, a default value (15) is used.
			</Property>
	    </PropertyCategory>
		<PropertyCategory name="Mapping">
		    <Property label="Manual">
		    	If checked, classes are not synchronized automatically by the mobile application. The modeler must take care of these classes. All other properties are disabled.
		    </Property>
		    <Property label="On Reopen">
		    	If checked, classes are synchronized every time the user brings the application in foreground or he starts up the mobile application (except for the start up after the app installation or update). This property is enabled by default.
		    </Property>
		    <Property label="Periodically">
		    	If checked, classes are synchronized at regular intervals. If you enable this property, the "Interval" property is mandatory.
		    </Property>
		    <Property label="Interval">
		    	This property defines the period of time (in minutes) according to which the synchronization is repeated. (e.g. If you enter "5" data are synchronized every 5 minutes.). If the "Periodically" property is set, this property is mandatory.
		    </Property>
		</PropertyCategory>
</Element>
