
<Element name="Attribute" lowerName="attribute" pluralLowerName="attributes">
	<Description>
		An attribute represents the properties of
		real world objects that are relevant for the application purposes.
		A special attribute, called &lt;b&gt;OID&lt;/b&gt;, is automatically
		added by WebRatio
		to all newly created classes: it represents the key attribute
		of the class, and its value is, by default, a numeric identifier,
		unique across all the
		instances of the class and automatically generated byWebRatio create
		operations.
		</Description>
	<ActionRef label="Remove Mapping" />
	<ActionRef label="Add Attribute" />
	<ActionRef label="Add Association" />
	<ActionRef label="Add Property" />
	<ActionRef label="Go to Metadata" />
	<ActionRef label="Localize" />
	<ActionRef label="Open Generated Code" />
	<ActionRef label="Generate Selection" />
	<ActionRef label="Search References" />
	<ActionRef label="Find Model Problems" />
	<ActionRef label="Help" />

	<PropertyCategory name="General">
		<PropertyRef label="Identifier" />
		<PropertyRef label="Name" />
		<Property label="Key">
			If checked, it means that the attribute is a key attribute
		</Property>
		<PropertyRef label="Type" />
		<Property label="Content Type">
			The MIME type of a BLOB, string, text or URL attribute.
			</Property>
		<PropertyRef label="Derivation" name="Attribute Derivation" />
		<Property label="Default Value">
			The attribute default value.
		</Property>
	</PropertyCategory>
	<PropertyCategory name="Mapping">
		<Property label="Project">
			Reference to one Data Service Project.
		</Property>
		<Property label="Service Class">
			Reference to a service class contained in the selected Data Service project. 
			The Select button <Button name="Browse"/> opens the dialog which allows to choose the 
			service class from the referenced Data Service project. 
			A service class is a class exposing data services.
		</Property>
		<Property label="Server Attribute">
			Reference to one attribute of the service class. The Select button <Button name="Browse"/> opens the 
			dialog which allows to choose the attributes from the referenced service class.
		</Property>		
		<PropertyRef label="Schema" />
		<PropertyRef label="Table" />
		<PropertyRef label="Column" />
		<PropertyRef label="Join Criteria" />
		<Property label="Encryption Algorithm">
			The algorithm used to crypt a password attribute.
			The Edit button
			<Button name="Browse" />
			opens the
			&lt;a href="/Reference/Preferences/Runtime"&gt; Runtime Preference Page&lt;/a&gt;,
			to manage the algorithms.
		</Property>
		<Property label="True Value">
			A user-defined string which permits to map the true boolean value on
			a CHAR/VARCHAR column.
			</Property>
		<Property label="False Value">
			A user-defined string which permits to map the false boolean value on
			a CHAR/VARCHAR column.
			</Property>
		<Property label="Fixed Char Length">
			A user-defined number. It permits to correctly handle attributes
			mapped on CHAR colums having fixed
			length: the values read from database are stripped of blank characters at
			the end, whereas
			being written values are automatically right padded.
			</Property>
		<Property label="Hibernate Type">
			WebRatio attributes requiring a special handling (marshalling, unmarshalling)
			on the database
			can be associated with a user-defined
			&lt;a
			href="http://www.hibernate.org/hib_docs/reference/en/html/mapping.html#mapping-types-custom"&gt;Hibernate
			custom type&lt;/a&gt;.
			(i.e. &lt;code&gt;com.webratio.acme.Base64StringType&lt;/code&gt;)
		</Property>
		<Property label="ID Generator">
			The &lt;a href="http://www.hibernate.org"&gt;Hibernate&lt;/a&gt; ID
			Generator used to generate the primary key for new records.
			Possible values are: assigned, guid, identity, increment, sequence, UUID.
		</Property>
		<Property label="Sequence Name">
			The sequence name used to increment the ID when the ID generator is
			sequence.
			</Property>
		<Property label="CLOB">
			If checked, identifies an attribute of type text as CLOB.
			</Property>
		<Property label="Column Size">
			Specifies the size of string/text attribute columns for a volatile database
			(default 255). 
			</Property>
	</PropertyCategory>
	<PropertyCategory name="XSD">
		<PropertyRef label="XSD Element" />
		<Property label="True Value">
			A user-defined string which permits to map the true boolean value on generic string.
			</Property>
		<Property label="False Value">
			A user-defined string which permits to map the false boolean value on generic string.
			</Property>
	</PropertyCategory>
	<PropertyCategory name="BLOB">
		<Property label="Storage Type">
			Identifies where the file upload will be saved. On &lt;b&gt;file&lt;/b&gt; or
			on &lt;b&gt;database&lt;/b&gt;.
			</Property>
		<Property label="BLOB Column">
			Identifies the column where the file will be saved.
			</Property>
		<Property label="Default BLOB Name">
			Identifies the default name of a BLOB.
			</Property>
		<Property label="Upload Path">
			Identifies the path where the file upload will be saved.
			</Property>
		<Property label="Upload Policy">
			Identifies the upload file policy:
			&lt;ul&gt;
			&lt;li&gt; managed: create automatically the sub-folder path to
			preserve latest versions. The sub-folder path is like: "ent1/1" where
			"ent1" is the identifier of the attribute class and "1" is a
			progressive number indicating the version.&lt;/li&gt;
			&lt;li&gt; overwrite: overwrite the existing file. &lt;/li&gt;
			&lt;li&gt; fail on overwrite: an error is produced if the file already exists.
			&lt;/li&gt;
			&lt;/ul&gt; </Property>
		<Property label="Delete Policy">
			Identifies the removing file policy:
			&lt;ul&gt;
			&lt;li&gt; delete: remove the file during a delete &lt;/li&gt;
			&lt;li&gt; none: do not remove the file. &lt;/li&gt;
			&lt;/ul&gt; </Property>
		<Property label="File Uploader">
			Identifies the custom file uploader class which must implement the
			&lt;code&gt;com.webratio.rtx.RTXFileUploader&lt;/code&gt; interface.
		</Property>
	</PropertyCategory>
</Element>