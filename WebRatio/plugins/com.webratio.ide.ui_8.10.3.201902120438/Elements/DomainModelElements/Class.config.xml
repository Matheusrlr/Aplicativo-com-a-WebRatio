<?xml version="1.0" encoding="UTF-8"?>

<Element name="Class" lowerName="class"
		pluralLowerName="classes">
		<Description>
			A class is the central concept of the UML model. 
			A class represents a description of the common features of set of objects of 
			the real world.
		</Description>
		<ActionRef label="Remove Mapping"/>
		<Action label="Add Attribute"/>
		<Action label="Add Association"/>
		<ActionRef label="Add Generalization"/>
		<ActionRef label="Add Property"/>
		<ActionRef label="Go to Metadata"/>
		<ActionRef label="Localize"/>
		<ActionRef label="Open Generated Code"/>
		<ActionRef label="Generate Selection"/>
		<ActionRef label="Search References"/>
		<ActionRef label="Find Model Problems"/>
		<ActionRef label="Help"/>
		
		<PropertyCategory name="General">
			<PropertyRef label="Identifier" />
			<PropertyRef label="Name" />
			<Property label="Duration">
				Indicates whether the instances of this class, at run-time,
				will be either stored into a &lt;b&gt;persistent&lt;/b&gt; relational database or
				into a &lt;b&gt;volatile&lt;/b&gt; &quot;database&quot;; in the former case the class 
				requires to be mapped over a relational database; in the latter case the 
				persistent mapping is not required and the instances are stored either in the
				session scope or in the application scope.
			</Property>
			<Property label="Volatile Storage">
				Indicates whether the volatile classes must be handled using a set of Java Beans or
				an in-memory relational database.
			</Property>
			<PropertyRef label="Derivation"/>
			<Property label="Attribute Order">
			    Defines the order of the class attributes. 
			    The Sort button <Button name="Browse"/> opens the 
			    &lt;a href="/Reference/WizardsAndDialogs/OrderingDialog"/&gt;, which 
			    allows to change the attributes order.
			</Property>
			<Property label="Singleton">
				If checked restricts the instantiation of the <ElementRef /> to one object.
			</Property>			
		</PropertyCategory>
		<PropertyCategory name="Mapping">
			<Property label="Project">
				Reference to one Data Service Project.
			</Property>
			<Property label="Service Class">
				Reference to a service class contained in the selected Data Service project. 
				The Select button <Button name="Browse"/> opens the dialog which allows to choose the service class from the referenced Data Service project. 
				A service class is a class exposing data services.
			</Property>		
			<PropertyRef label="Database"/>
			<PropertyRef label="Schema"/>
			<PropertyRef label="Table"/>
			<Property label="Database View">
			    If checked, the class is mapped on a database view.
			</Property>
			<Property label="Volatile Storage">
		    	Indicates whether the volatile classes must be handled using a set of Java Beans or an in-memory relational database.
			</Property>
		    <Property label="Manual">
		    	If checked, the class is not synchronized automatically by the mobile application. The modeler must take care of this class. All other properties are disabled.
		    </Property>
		    <Property label="On Reopen">
		    	If checked, the class is synchronized every time the user brings the application in foreground or he starts up the mobile application (except for the start up after the app installation or update).
		    </Property>
		    <Property label="Periodically">
		    	If checked, the class is synchronized at regular intervals. If you enable this property, the "Interval" property is mandatory.
		    </Property>
		    <Property label="Interval">
		    	This property defines the period of time (in minutes) according to which the synchronization is repeated. (e.g. If you enter "5" data are synchronized every 5 minutes.). If the "Periodically" property is set, this property is mandatory.
		    </Property>
		</PropertyCategory>
		<PropertyCategory name="XSD">
			<PropertyRef label="XSD Resource" />
			<PropertyRef label="XSD Type" />
			<Property label="XSD Provider">
		    	The referenced XSD Provider containing the user defined XSD resources. The Select button opens the selection dialog showing all the XSD providers declared in the project.
			</Property>
		</PropertyCategory>
		<PropertyCategory name="Appearance">
			<Property label="Show Attributes">
			    If checked, the attributes are shown in the work area.
			</Property>
		</PropertyCategory>
</Element>