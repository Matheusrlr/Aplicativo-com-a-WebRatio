#?delimiters [%,%],[%=,%]
<?xml version="1.0" encoding="UTF-8"  ?>
<!DOCTYPE jasperReport PUBLIC "//JasperReports//DTD Report Design//EN" "http://jasperreports.sourceforge.net/dtds/jasperreport.dtd">
[%
import com.webratio.ide.ui.reports.ReportModelUtils
import org.apache.commons.lang.StringEscapeUtils

def reportUtils = new ReportModelUtils(element.document)

def elemId = element["id"]
def displayAtts = element["displayAttributes"].tokenize(" ")
def layoutAttsById = [:]
if (layoutUnit != null) {
    layoutUnit.selectNodes("layout:Attribute").each{layoutAttsById[it["attribute"]] = it}
}
def i18nProperties = new HashSet(page.selectNodes("Property[@name='i18n']").collect{reportUtils.toValidFieldName(it["value"])}.findAll{it != ""})
def levels = element.selectNodes("HierarchyLevel")
int levelWidth = 0
if (levels.size() > 0) {
    levelWidth = 520 / levels.size()
}
def pageXMLName = reportUtils.toValidClassName(page["name"])
int index = 0
int depth = element.selectNodes("ancestor-or-self::*[self::HierarchyLevel or self::Hierarchy]").size()

%]
<jasperReport
     name="WebRatio Hierarchical Index Unit SubReport"
     columnCount="1"
     printOrder="Vertical"
     orientation="Portrait"
     pageWidth="595"
     pageHeight="842"
     columnWidth="535"
     columnSpacing="0"
     leftMargin="0"
     rightMargin="0"
     topMargin="0"
     bottomMargin="0"
     whenNoDataType="NoPages"
     isTitleNewPage="false"
     isSummaryNewPage="false">
    <property name="ireport.scriptlethandling" value="2" />
    <property name="ireport.encoding" value="UTF-8" />
    <import value="java.util.*" />
    <import value="net.sf.jasperreports.engine.*" />
    <import value="net.sf.jasperreports.engine.data.*" />
    <parameter name="SUBREPORT_DIR" isForPrompting="true" class="java.lang.String">
      <defaultValueExpression>"[%=StringEscapeUtils.escapeJava(reportDirPath)%]"</defaultValueExpression>
    </parameter>
	<parameter name="BASE_URI" isForPrompting="false" class="java.lang.String"/>
	[% if (element.selectSingleNode("self::Hierarchy") != null) { %]
    [% for (i18nProperty in i18nProperties) { %]
      <field name="i18n.global.[%=i18nProperty%]" class="java.lang.String">
        <fieldDescription>[%= "../../" * depth %]i18n.global.[%=i18nProperty%]</fieldDescription>
      </field>
    [% } %]
    [% } %]
    [% for (attr in displayAtts) { 
        def attrName = reportUtils.toValidFieldName(attr) %]
      <field name="i18n.[%=attrName%]" class="java.lang.String">
        <fieldDescription>../i18n.[%=attrName%]</fieldDescription>
      </field>
    [% } %]
    [% for (attr in displayAtts) { 
        def attrName = reportUtils.toValidFieldName(attr) %]
      <field name="[%=attrName%]" class="java.lang.String">
        <fieldDescription>[%=attrName%]</fieldDescription>
      </field>
    [% } %]
    <background>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </background>
    <title>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </title>
    <pageHeader>
      <band height="20"  isSplitAllowed="true" >
      </band>
    </pageHeader>
    <columnHeader>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </columnHeader>
    <detail>
	  <band height="[%=40 + (displayAtts.size() * 20)%]" isSplitAllowed="true" >
	    [% for (attr in displayAtts) { 
	        def attrName = reportUtils.toValidFieldName(attr)
	        def attrLabel = attrName
	        def layoutAttr = layoutAttsById[attr]
	        if ((layoutAttr != null) && (layoutAttr["label"] != "")) {
	            attrLabel = layoutAttr["label"]
	        } 
	        index++ %]
        <staticText>
          <reportElement
            mode="Opaque" x="5" y="[%=5 + (20 * index)%]"
                width="[%=11 * (attrLabel.length() + 1)%]" height="16"
                key="staticText-[%=elemId%]-[%=index%]"
				backcolor="#CCCCFF"/>
          <box>
            <topPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
            <leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
            <bottomPen lineWidth="0.0" lineColor="#000000"/>
            <rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
          </box>
          <textElement>
            <font/>
          </textElement>
          <text>[%=attrLabel%]:</text>
        </staticText>
        <textField isStretchWithOverflow="false" isBlankWhenNull="true" evaluationTime="Now" hyperlinkType="None"  hyperlinkTarget="Self" >
          <reportElement
              x="[%=5 + 11 * (attrLabel.length() + 1) + 5%]"
              y="[%=5 + (20 * index)%]"
              width="[%=11 * (attrName.length() + 3)%]"
              height="18"
              key="textField"/>
          <box>
            <topPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
            <leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
            <bottomPen lineWidth="0.0" lineColor="#000000"/>
            <rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
          </box>
          <textElement>
            <font/>
          </textElement>
          <textFieldExpression class="java.lang.String">$F{[%=attrName%]}</textFieldExpression>
        </textField>
        [% } %]
        [% index = 0 %]
        [% for (level in element.selectNodes("HierarchyLevel")) { 
            def levelXMLName = reportUtils.toValidClassName(level["name"])
            def levelEntityXMLName = reportUtils.toValidEntityClassName(level["entity"])
            def elemXMLName = reportUtils.toValidClassName(element["name"])
            def elemEntityXMLName = reportUtils.toValidEntityClassName(element["entity"]) 
            index++ %]
          <subreport isUsingCache="true">
            <reportElement 
                x="[%=5 + (levelWidth * (index - 1))%]" y="50"
                width="[%=levelWidth - 10%]" height="240"
                key="subreport-[%=index%]"
                positionType="Float"/>
            <subreportParameter name="BASE_URI">
              <subreportParameterExpression>$P{BASE_URI}</subreportParameterExpression>
            </subreportParameter>
            <subreportParameter  name="SUBREPORT_DIR">
              <subreportParameterExpression><![CDATA[$P{SUBREPORT_DIR}]]></subreportParameterExpression>
            </subreportParameter>
            <dataSourceExpression>((net.sf.jasperreports.engine.data.JRXmlDataSource)$P{REPORT_DATA_SOURCE}).subDataSource("/[%=elemEntityXMLName%]/[%=levelXMLName%]/[%=levelEntityXMLName%]")</dataSourceExpression>                    			  						
            <subreportExpression class="java.lang.String">$P{SUBREPORT_DIR} + "[%=pageXMLName%]_[%=levelXMLName%]_SubReport.jasper"</subreportExpression>
          </subreport>
        [% } %]
      </band>
    </detail>
    <columnFooter>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </columnFooter>
    <pageFooter>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </pageFooter>
    <lastPageFooter>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </lastPageFooter>
    <summary>
      <band height="0"  isSplitAllowed="true" >
      </band>
    </summary>
</jasperReport>