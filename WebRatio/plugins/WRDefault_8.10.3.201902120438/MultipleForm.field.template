#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Input size" name="input-size" type="string" default="25">
Defines the size of inputs.
Allowed values are:
- size of the input
- 25 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Input Max Length" name="input-max-length" type="string">
Defines the max length of inputs.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Javascript" name="use-javascripts" type="boolean" default="true">
Defines if calendar or Advanced HTML Editor have to be used.
 - true (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="CKEditor toolbar" name="fck-toolbar" type="string" default="WebRatioDefault">
Defines the toolbar the CKEditor should use.
Allowed values are:
- any toolbar defined in the CKEditor/config.js file
- WebRatioDefault (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Textarea width" name="width" type="string" default="35">
Defines the width of the textarea fields.
Allowed values are:
- number of columns
- 35 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Textarea height" name="height" type="string" default="8">
Defines the height of the textarea fields.
Allowed values are:
- number of rows
- 8 (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Boolean field rendering" name="boolean-field-rendering" type="enum" values="normal|checkbox" default="normal">
Defines the rendition of a boolean field.
Allowed values are:
- normal (default)
- checkbox
</wr:LayoutParameter>
<wr:LayoutParameter label="Use 'No selection' in Selection fields" name="selection-field-empty-message" type="boolean" default="true">
Defines if the option "No selection" has to be used.
Allowed values are:
 - true (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="No Selection Message" name="no-selection-message" type="string" default="selectionfield.noselection">
Defines the key of the message to use as the no selection item.
Default value: selectionfield.noselection
</wr:LayoutParameter>
<wr:LayoutParameter label="Selection field rendering" name="selection-field-rendering" type="enum" values="select|radio|radio horizontal" default="select">
Defines the rendition of a selection field.
Allowed values are:
- select (default)
- radio
- radio horizontal
</wr:LayoutParameter>
<wr:LayoutParameter label="Localize Values" name="localize-values" type="boolean" default="false">
Defines whether to use bean message to print out the (multi) selection field values.
</wr:LayoutParameter>
[%

import org.apache.commons.lang.math.NumberUtils
import org.apache.commons.lang.StringUtils

def unitId = field.selectSingleNode("ancestor::layout:Component")?.valueOf("@componentId")
if (unitId == "") {
	unitId = field["componentId"]
} 
def fieldId = field["field"]
def type = field["type"]
def contentType = field["contentType"]
def modifiable = (field["modifiable"] == "true")
def plain = getById(field["field"])?.name == "Field"
def selection = getById(field["field"])?.name == "SelectionField"
def fieldProp = field["field"] + ((isLocalizedType(type) && plain) ? "_locale" : "")
def inputSize = params["input-size"]
def maxLength = params["input-max-length"]
def ckEditorToolbar = StringUtils.defaultIfEmpty(params["fck-toolbar"], "WebRatioDefault")
def useJavascripts = params["use-javascripts"]
def typeId = (field["subType"] != "") ? field["subType"] : type
def formBean = getFormBeanName(page)
def indexedProp = unitId + "[\${index}]"

def selectionFieldRendering = params["selection-field-rendering"]
def localizeValues = "true" == params["localize-values"] || (isBpmLocalizedModel() && StringUtils.isNotBlank(getField(field).valueOf("@bpm:uuid")))
def width = NumberUtils.toInt(params["width"])
def height = NumberUtils.toInt(params["height"])
def submitEvents = getSubmitLayoutEvents(field)

def readCond = getDisableCondition(field)
def readOnly = "false"
if(!selection && !modifiable){
  readOnly = "true"
}else if(readCond != null){
  readOnly = "\${" + readCond + "}"  
}

def submitButtonsClass = (submitEvents.size() > 0 ? "wr-submitButtons:" + submitEvents.collect{ getEventRuntimeId(it) }.join(",") : "")

if (mode == "error") { %]
	<form:errors path="[%=indexedProp%].[%=fieldProp%]" cssClass="<wr:StyleClass context="field"/> error"/>
[% } else if (mode == "label") { %]
<wr:Label context="field"/>
[% } else if (plain) {%]
	[% if ((type == "boolean")) { %]
		[% if (params["boolean-field-rendering"] == "checkbox") { %]
			<form:checkbox path="[%=indexedProp%].[%=fieldProp%]" value="true" disabled="[% printJSPTagValue(readOnly)%]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" id="[%=indexedProp%].[%=fieldProp%]"/>
		[% } else { %]
			[% if (modifiable) { %]
				<div>
					<form:radiobutton cssClass="[%=submitButtonsClass%] [%=styleClass%]" path="[%=indexedProp%].[%=fieldProp%]" value="true" disabled="[% printJSPTagValue(readOnly)%]"/>
					<spring:message code="[%=typeId%].yes"/>
					<form:radiobutton cssClass="[%=submitButtonsClass%] [%=styleClass%]" path="[%=indexedProp%].[%=fieldProp%]" value="false" disabled="[% printJSPTagValue(readOnly)%]"/>
					<spring:message code="[%=typeId%].no"/>
				</div>
			[% } else { %]
				<c:choose>
					<c:when test="${[%=unitId%].[%=fieldProp%]}"><spring:message code="[%=typeId%].yes"/></c:when>
					<c:otherwise><spring:message code="[%=typeId%].no"/></c:otherwise>
				</c:choose>
			[% } %]
			<c:if test="[% printJSPTagValue(readOnly)%]">
				<form:hidden path="[%=indexedProp%].[%=fieldProp%]"/>
			</c:if>
		[% } %]
	[% } else if ((type == "text")) { %]
		[% if (contentType == "text/html" && useJavascripts == "true") { %]
			<form:textarea id="[%=indexedProp%].[%=fieldProp%]" path="[%=indexedProp%].[%=fieldProp%]" cssClass="[%=styleClass%]" style="box-sizing:border-box; width:[%= (width * 10) + 2 %]px; height:[%= ((height * 10) + 120) + 71 %]px" readonly="[% printJSPTagValue(readOnly)%]"/>
			<wr:RequireResource ref="cksource-ckeditor">
				<script type="text/javascript">
					if (CKEDITOR.instances['[%=indexedProp%].[%=fieldProp%]']) {
						CKEDITOR.instances['[%=indexedProp%].[%=fieldProp%]'].destroy(true);
					}
					CKEDITOR.replace('[%=indexedProp%].[%=fieldProp%]', {
						width    : [%= width * 10 %],
						height   : [%= (height * 10) + 120 %],
						toolbar  : '[%= ckEditorToolbar %]',
						language : '<%= com.webratio.web.mvc.WebConstants.PAGE_LOCALE_KEY.get(pageContext).getLanguage() %>',
						baseHref : '<%= wrBaseURI %>',
						readOnly : [% printJSPTagValue(readOnly)%]
					});
				</script>
			</wr:RequireResource>
		[% } else { %]
			<form:textarea id="[%=indexedProp%].[%=fieldProp%]" path="[%=indexedProp%].[%=fieldProp%]" cssClass="[%=styleClass%]" cols="[%= width %]" rows="[%= height %]" readonly="[% printJSPTagValue(readOnly)%]"/>
		[% } %]
  	[% } else if (type == "blob") { %]
		<form:hidden path="[%=indexedProp%].[%=fieldProp%].preload"/>
	    [% if (modifiable) { %]
		<form:input id="[%=indexedProp%].[%=fieldProp%]" cssClass="[%=submitButtonsClass%]" path="[%=indexedProp%].[%=fieldProp%].file" disabled="[% printJSPTagValue(readOnly)%]" size="[%= inputSize %]" type="file" />
	    [% } %]
		<c:if test="${not empty([%=unitId%].[%=fieldProp%].preload)}">
		  <table>
		    <tr>
		      <td>
		        <form:checkbox path="[%=indexedProp%].[%=fieldProp%].clear" cssClass="[%=submitButtonsClass%]"  disabled="[% printJSPTagValue(readOnly)%]"/> clear <a target="blank" href="<webratio:BLOB value="${[%=formBean%].[%=unitId%][index].[%=fieldProp%].preload}"/>">preview</a>
		      </td>
		    </tr>
		  </table>
		</c:if>
  	[% } else if (type == "password") { %]
		<form:password id="[%=indexedProp%].[%=fieldProp%]" path="[%=indexedProp%].[%=fieldProp%]" size="[%= inputSize %]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" readonly="[% printJSPTagValue(readOnly)%]" redisplay="false" autocomplete="off"/>
  	[% } else { %]
  		[%  if ((type == "date" || type == "time" || type == "timestamp") && useJavascripts == "true") { %]
			<div>
				<div style="padding-right: 24px; white-space: nowrap">
		  			<form:input id="[%=indexedProp%].[%=fieldProp%]" path="[%=indexedProp%].[%=fieldProp%]" [% if (maxLength != "") { %]maxlength="[%= maxLength %]"[% } %] size="[%= inputSize %]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" readonly="[% printJSPTagValue(readOnly) %]" style="width: 100%; margin: 0"/>
		  			<wr:RequireResource ref="wr-calendar-utils"/>
					[% if (type == "date" || type == "timestamp") { %]
						<wr:RequireResource ref="jquery-ui-datepicker-lang"/>
					[% } %]
					[% if (type == "time" || type == "timestamp") { %]
						<wr:RequireResource ref="richardson-timepicker-lang"/>
					[% } %]
		  			<c:choose><c:when test="[% printJSPTagValue(readOnly) %]">
						<img src="Resources/calendar_disabled.gif" />
		  			</c:when><c:otherwise>
						<script type="text/javascript">
							jQuery(function($) { 								
								var pattern = $.wr.calendar.[%= type %]ConfigFromJava("${[%= typeId%]Pattern}");
								$('[id="[%=indexedProp%].[%=fieldProp%]"]').[%= (type == "timestamp") ? "datetime" : type %]picker({
									showOn: "button",
									showWeek: true,
									buttonImage: "Resources/calendar.gif",
									buttonImageOnly: true,
									showButtonPanel: true,
								[% if (type == "date") { %]
									dateFormat: pattern.dateFormat,
									firstDay: <%= java.util.Calendar.getInstance(com.webratio.web.mvc.WebConstants.PAGE_LOCALE_KEY.get(pageContext)).getFirstDayOfWeek() - 1 %>
								[% } else if (type == "time") { %]
									timeFormat: pattern.timeFormat,
									ampm: pattern.ampm
								[% } else { %]
									dateFormat: pattern.dateFormat,
									firstDay: <%= java.util.Calendar.getInstance(com.webratio.web.mvc.WebConstants.PAGE_LOCALE_KEY.get(pageContext)).getFirstDayOfWeek() - 1 %>,
									timeFormat: pattern.timeFormat,
									ampm: pattern.ampm,
									separator: pattern.separator
								[% } %]
								});
							});
						</script>
					</c:otherwise></c:choose>
				</div>
			</div>
		[% } else { %]
			<form:input id="[%=indexedProp%].[%=fieldProp%]" path="[%=indexedProp%].[%=fieldProp%]"  [% if (maxLength != "") { %]maxlength="[%= maxLength %]"[% } %] size="[%= inputSize %]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" readonly="[% printJSPTagValue(readOnly) %]"/>
	  	[% } %]
 	[% } %]
[% } else if (selection) { 
     if(readCond != null){
           %]<c:if test="[% printJSPTagValue(readOnly)%]"><form:hidden path="[%=indexedProp%].[%=fieldProp%]"/></c:if>[%        
     }
     def selectionFieldEmpty = params["selection-field-empty-message"]   
     if (type == "boolean") { %]
	   <form:select id="[%=indexedProp%].[%=fieldProp%]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" path="[%=indexedProp%].[%=fieldProp%]" disabled="[% printJSPTagValue(readOnly)%]">
	     [% if (selectionFieldEmpty == "true") { %]
		  	<form:option value=""><spring:message code="[%=params["no-selection-message"]%]"/></form:option>
	     [% } %]
	     <form:option value="false"><spring:message code="[%=typeId%].no"/></form:option>
	     <form:option value="true"><spring:message code="[%=typeId%].yes"/></form:option>
	   </form:select>
     [% } else { 
        def itemsProperty = field["field"] + "Items"
		def selectionFieldRendition = params["selection-field-rendering"]
		if (selectionFieldRendition == "select") { %]
		<form:select id="[%=indexedProp%].[%=fieldProp%]" cssClass="[%=submitButtonsClass%] [%=styleClass%]" path="[%=indexedProp%].[%= fieldProp %]" disabled="[% printJSPTagValue(readOnly)%]">
		  [% if (selectionFieldEmpty == "true") { %]
		  	<form:option value=""><spring:message code="[%=params["no-selection-message"]%]"/></form:option>
		  [% } %]
		  [%if (localizeValues) {%]
			<c:forEach var="optionCurrent" varStatus="optionStatus" items="${[%=formBean%].[%=itemsProperty%]}">
				<form:option value="${optionCurrent.value}"><spring:message code="${optionCurrent.label}"/></form:option>
			</c:forEach>
		  [%} else {%]
		    <form:options items="${[%=formBean%].[%=itemsProperty%]}" itemValue="value" itemLabel="label"/>
		  [% } %]
		</form:select>
		[% } else if (selectionFieldRendition == "radio horizontal") { %]
		  <c:forEach var="radioCurrent" varStatus="radioStatus" items="${[%=formBean%].[%=itemsProperty%]}">
      		<input type="radio" name="[%=indexedProp%].[%=fieldProp%]" class="[%=submitButtonsClass%]" value="<c:out value="${radioCurrent.value}"/>" <c:if test="${[%=unitId%].[%=fieldProp%] eq radioCurrent.value}">checked="checked"</c:if> [% if(readCond != null){%]<c:if test="[% printJSPTagValue(readOnly)%]">disabled</c:if>[%}%]><c:out value="${radioCurrent.label}"/></input>
		  </c:forEach>
		[% } else { %]
		<table>
			<c:forEach var="radioCurrent" varStatus="radioStatus" items="${[%=formBean%].[%=itemsProperty%]}">
      			<tr>
	      			<td>
		      			<input type="radio" name="[%=indexedProp%].[%=fieldProp%]" class="[%=submitButtonsClass%]" value="<c:out value="${radioCurrent.value}"/>" <c:if test="${[%=unitId%].[%=fieldProp%] eq radioCurrent.value}">checked="checked"</c:if> [% if(readCond != null){%]<c:if test="[% printJSPTagValue(readOnly)%]">disabled</c:if>[%}%]>
		      				[%if (localizeValues) {%]
							   <spring:message code="${radioCurrent.label}"/>
						    [%} else {%]
							   <c:out value="${radioCurrent.label}"/> 
						    [%}%]
		      			</input>
		      		</td>
		      	</tr>
      		</c:forEach>
		</table>
		[% } %]
     [% } %]
[% } %]
