#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Custom ID"  name="custom-id" type="string">
Specifies a custom value for the "id" attribute of the HTML element
generated for the event. This overrides any identifier that is usually generated.
Defaults to the event runtime ID (for anchors) or "button:" followed by the event runtime ID (for buttons).
</wr:LayoutParameter>
<wr:LayoutParameter label="Link Style" name="link-style" type="enum" values="normal|button" default="normal">
Defines the style of the event. 
Allowed values are:
- normal (default)
- button
</wr:LayoutParameter>
<wr:LayoutParameter label="Show" name="show" type="enum" values="text|icon|icon &amp; text|text &amp; icon" default="text">
Defines the content of the event.
Allowed values are:
- text (default)
- icon & text
- text & icon
- icon
</wr:LayoutParameter>
<wr:LayoutParameter label="Icon Folder" name="icon-folder" type="string" default="Resources">
Defines the path to the folder containing the icon used to render links if you choose icon, icon & text or text & icon in the "Show" parameter.
</wr:LayoutParameter>
<wr:LayoutParameter label="Icon Extension" name="icon-extension" type="string" default="png">
Defines the extension of the icon used to render links if you choose icon, icon & text or text & icon in the "Show" parameter.
</wr:LayoutParameter>
<wr:LayoutParameter label="Icon Name" name="icon-name" type="string">
Defines the name of the image to use. If omitted the name of the event is used.
</wr:LayoutParameter>
<wr:LayoutParameter label="Icon Padding" name="icon-padding" type="string" default="20px">
The space that should be reserved for the icon in "icon & text" buttons. Usually set a bit wider than the icon.
</wr:LayoutParameter>
<wr:LayoutParameter label="New Window Type" name="new-window-type" type="enum" values="normal|javascript" default="normal">
Defines the type of the window in which the target of the event has to be opened. 
Allowed values are:
- normal (default)
- javascript
</wr:LayoutParameter>
<wr:LayoutParameter label="New Window Options" name="new-window-options" type="string" default="width=640,height=480,status=yes">
Defines the properties of the window. It is a string written as you would write the style HTML attribute.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Confirm Dialog" name="confirmation" type="boolean" default="false">
Defines if a confirmation dialog has to be shown before the event is navigated. 
Allowed values are:
- true 
- false (default)
</wr:LayoutParameter>
<wr:LayoutParameter label="Confirm Message Key" name="confirm-message" type="string" default="linkConfirmMessage">
Defines the message to show to the user in the confirmation dialog. It is a key that has also to be added in the Localization dialog.
</wr:LayoutParameter>

[%
	import org.apache.commons.lang.StringUtils
	import org.apache.commons.lang.StringEscapeUtils
	import java.io.File

	def unitId = event.selectSingleNode("ancestor::layout:Component")?.valueOf("@componentId")
	if (unitId == "") {
		unitId = event["componentId"]
	} 
	
	def flow = event.selectSingleNode("NavigationFlow")
	def htmlId = StringUtils.defaultIfEmpty(params["custom-id"], getEventRuntimeId(event))
	def htmlButtonId = StringUtils.defaultIfEmpty(params["custom-id"], "button:" + getEventRuntimeId(event))
	def sortAtt = StringUtils.substringAfter(event["id"], unitId)
	def linkStyle = params["link-style"]
	def show = params["show"]
	def newWindowType = params["new-window-type"]
	def newWindowOptions = params["new-window-options"]
	def useImage = (show == "icon" || show == "icon & text" || show == "text & icon") ? true : false
	def image = params["icon-folder"] + "|" + params["icon-extension"]
	def confirmation = params["confirmation"]
	def confirmMessage = params["confirm-message"]
	if (((type == "") || (type == "-ajax")) && (event["componentId"] != "")) {  // event individually placed
	     type = (isFormBased(getById(event["componentId"])) ? "button" : "") + type
	}
	def isAjax = isAjaxEvent(event)
	def formBean = getFormBeanName(page)
	def folder = params["icon-folder"] + "/"
	def extension = "." + params["icon-extension"]
	if (useImage) { 
		def tokens = StringUtils.splitPreserveAllTokens(image, "|");		
		if (tokens.length > 1) {
			folder = tokens[0]
			if (folder == "") {
				folder = params["icon-folder"] + "/"
			} else {
				if (folder.startsWith(File.separator)) {
		           folder = StringUtils.substringAfter(folder, File.separator)
		        }
				if (!folder.endsWith(File.separator)) {
		           folder = folder + File.separator;
		        }
		     }
		    folder = StringUtils.replace(folder, File.separator, "/")
			extension = tokens[1]
			if (extension == "") {
				extension = "." + params["icon-extension"]
			} else {
				if (!extension.startsWith(".")) {
		           extension = "." + extension
		        }
			}
		}	
	}
%]
[% if (confirmation == "true") { %]
	<c:set var="_wr_message"><spring:message code="[%printJSPTagValue(confirmMessage)%]"/></c:set>
	<% pageContext.setAttribute("_wr_message", org.apache.commons.lang.StringEscapeUtils.escapeJavaScript((String) pageContext.getAttribute("_wr_message")));%>
[% } %]
[%
	def getAlternativeText() {
		if (event["alternativeText"] != "") {
			if (getEffectiveLocalizedElement(event)) {
	   			return "<spring:message code=\"" + getJSPTagValue(event["alternativeText"]) +  "\"/>"
			} else { 
			  return event["alternativeText"]
			} 
		}
		if (getEffectiveLocalizedElement(event)) {
   			return "<spring:message code=\"" + getJSPTagValue(getTitle(event)) +  "\"/>"
		} else { 
		  return getTitle(event)
		} 
	}

	def getIconName() {
		def iconName = StringUtils.defaultIfEmpty(params["icon-name"], "")
		if (iconName != "") {
			return iconName
		}
		return event["name"]
	}
	
	def getButtonImageStyle = {
		if (show == "icon") {
			return "background-position: center; background-repeat: no-repeat; text-indent: -9999px;"
		} else if (show == "icon & text") {
			return "background-position: left; background-repeat: no-repeat; padding-left: ${params['icon-padding']};"
		} else if (show == "text & icon") {
			return "background-position: right; background-repeat: no-repeat; padding-right: ${params['icon-padding']};"
		} else {
			return "";
		}
	}
%]

[% if (type.contains("-ajax")) { 
	if (isAjax) { %]
		return [% printRaw(getAjaxRequestCall(event, position)) %]
	[% }
 } else {
 
 def disableCond =  getDisableCondition(event, position)
 def visibility = StringUtils.defaultIfEmpty(getInaccessibleEventPolicy(event), "hide")
 def isProtected = (getClosestAccessAwareElement(getById(flow["to"])) != null)
 
 if (isProtected || disableCond != null) {
     if (isProtected && visibility == "hide" && disableCond == null) { %]
		<c:if test="${webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext)}">
	 [% } else if (isProtected && visibility == "hide" && disableCond != null) { %]
		<c:choose>
	       <c:when test="${not(webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext))}"/>
	       <c:when test="${not([%printJSPTagValue(disableCond)%])}">
	 [% } else if (visibility == "inactive" || disableCond != null) { %]
	    [% def conds = []
	       if(isProtected && visibility != "always"){
	        conds.add("webratio:isTargetAccessible('" + getEventRuntimeId(event) + "', pageContext)")
	       }
	       if(disableCond != null){
	         conds.add("not(" + disableCond + ")")
	       }
	    %]
	    <c:choose>
	       <c:when test="${[%printJSPTagValue(conds.join(" and "))%]}">
	 [% } 
 }%]
 	[% if ("button" == type) { %]
 		[% if (isAjax) { %]
 			<input title="[%= getAlternativeText() %]" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %]return [% printRaw(getAjaxRequestCall(event, position)) %] [% if (confirmation == "true") { %] } else  { $('#[%= escapeCSS(formBean) %]')[0].target='_self'; event.preventDefault ? event.preventDefault() : event.returnValue = false; } return c; [% } %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %][%=extension%]'); [%=getButtonImageStyle()%]"[% } %] id="[%= htmlButtonId %]" name="button:[%= getEventRuntimeId(event) %]" type="submit" value="<wr:Label context="event"/>">
 		[% } else { %]
			<input title="[%= getAlternativeText() %]" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %][%if (event["newWindow"] == "true") { %][%if (newWindowType == "normal") { %] $('#[%= escapeCSS(formBean) %]')[0].target='_blank'[% } else { %] $('#[%= escapeCSS(formBean) %]')[0].target = '[%= htmlId %]'; window.open('','[%= htmlId %]','[%= newWindowOptions %]'); return true;[% } %][% } else { %]$('#[%= escapeCSS(formBean) %]')[0].target='_self'[% } %][% if (confirmation == "true") { %] } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; } return c; [% } %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %][%=extension%]'); [%=getButtonImageStyle()%]"[% } %] id="[%= htmlButtonId %]" name="button:[%= getEventRuntimeId(event) %]" type="submit" value="<wr:Label context="event"/>">
		[% } %]
	[% } else { %]
		[% if (linkStyle == "button" && "sort" != type) { %]
			[% if (isAjax) { %]
				<input title="[%= getAlternativeText() %]" id="[%= htmlId %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %][%=extension%]'); [%=getButtonImageStyle()%]"[% } %] type="button" value="<wr:Label context="event"/>" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %]return [% printRaw(getAjaxRequestCall(event, position)) %][% if (confirmation == "true") { %] } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; }  return c; [% } %]">
 			[% } else { %]
				<input title="[%= getAlternativeText() %]" id="[%= htmlId %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %][%=extension%]'); [%=getButtonImageStyle()%]"[% } %] type="button" value="<wr:Label context="event"/>" onclick="[% if (confirmation == "true") { %] if (confirm('<c:out value="${_wr_message}"/>')) { [% } %][%if (event["newWindow"] == "true") { %]window.open('<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>','','[%if (newWindowType == "javascript") { %][%= newWindowOptions %][%} %]');[% } else { %]setWindowLocation('<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>');[% } %][% if (confirmation == "true") { %] } [% } %]event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;">
			[% } %]
		[% } else  { %]
			[% if (useImage) { %]
				<table cellspacing="0" cellpadding="0">
					<tr>
			[% } %]	
	        [% if (show == "text & icon") { %]
	          <td>
	        	[% if (isAjax) { %]
			 		<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %]return [% printRaw(getAjaxRequestCall(event, position)) %][% if (confirmation == "true") { %] } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; } return c; [% } %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>">							
			 	[% } else { %]
			 		<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>"[%if (event["newWindow"] == "true") { %][%if (newWindowType == "normal") { %] target="_blank" [% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else {event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;}"[% } %][% } else { %] onclick="[% if (confirmation == "true") { %] if (confirm('<c:out value="${_wr_message}"/>')) {[% } %] window.open('<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>' ,'', '[%= newWindowOptions %]'); [% if (confirmation == "true") { %] } [% } %] event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;"[% } %][% } else { %][% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; return false; }"[% } %][% } %]>
				[% } %]
					<wr:Label context="event"/></a>
			  </td>
	        [% } %]
			[% if (useImage) { %]
				<td valign="middle">
					[% if (isAjax) { %]
			 			<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %]return [% printRaw(getAjaxRequestCall(event, position)) %][% if (confirmation == "true") { %] } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; } return c; [% } %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>">							
			 		[% } else { %]
			 			<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>"[%if (event["newWindow"] == "true") { %][%if (newWindowType == "normal") { %] target="_blank" [% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else {event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;}"[% } %][% } else { %] onclick="[% if (confirmation == "true") { %] if (confirm('<c:out value="${_wr_message}"/>')) {[% } %] window.open('<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>' ,'', '[%= newWindowOptions %]'); [% if (confirmation == "true") { %] } [% } %] event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;"[% } %][% } else { %][% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; return false; }"[% } %][% } %]>
					[% } %]
					[% if (type == "sort") { %]
						<c:choose>
		         			<c:when test="${[%= unitId %].sortMask.[%= sortAtt %] eq 'A'}">
		         				<img title="[%= getAlternativeText() %]" alt="[%= getAlternativeText() %]" src="WRResources/spacer.gif" border="0" class="sortAscending" />
		         			</c:when>
		         			<c:otherwise>
		         				<img title="[%= getAlternativeText() %]" alt="[%= getAlternativeText() %]" src="WRResources/spacer.gif" border="0" class="sortDescending" />
		         			</c:otherwise>
		         		</c:choose>
					[% } else { %]
						<img title="[%= getAlternativeText() %]" alt="[%= getAlternativeText() %]" src="[%=folder%][%= getIconName() %][%=extension%]" border="0"/>
					[% } %]	
					</a>
				</td>
			[% } %]	
			[% if (!useImage || show == "icon & text" || show == "text"){ %]
				[% if (show != "text") { %]
					<td>
				[% } %]	
				[% if (isAjax) { %]
		 			<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" onclick="[% if (confirmation == "true") { %] var c = confirm('<c:out value="${_wr_message}"/>'); if (c) { [% } %]return [% printRaw(getAjaxRequestCall(event, position)) %][% if (confirmation == "true") { %] } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; } return c; [% } %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>">							
		 		[% } else { %]
		 			<a title="[%= getAlternativeText() %]" id="[%= htmlId %]" [%= styleClass ? "class=\"${styleClass}\"" : "" %] href="<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>"[%if (event["newWindow"] == "true") { %][%if (newWindowType == "normal") { %] target="_blank" [% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else {event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;}"[% } %][% } else { %] onclick="[% if (confirmation == "true") { %] if (confirm('<c:out value="${_wr_message}"/>')) {[% } %] window.open('<webratio:Link link="[%= getEventRuntimeId(event) %]" position="[%= position %]"/>' ,'', '[%= newWindowOptions %]'); [% if (confirmation == "true") { %] } [% } %] event.preventDefault ? event.preventDefault() : event.returnValue = false; return false;"[% } %][% } else { %][% if (confirmation == "true") { %] onclick="if (confirm('<c:out value="${_wr_message}"/>')) { return true; } else { event.preventDefault ? event.preventDefault() : event.returnValue = false; return false; }"[% } %][% } %]>
				[% } %]
					<wr:Label context="event"/></a>
				[% if (show != "text") { %]
					</td>
				[% } %]	
			[% } %]
			[% if (useImage) { %]
				</tr>
			</table>	
			[% } %]	
		[% } %]
	[% } %]									
 [% if (isProtected || disableCond != null) {
 	if (visibility == "inactive"  || disableCond != null) { %]
     </c:when>
	 <c:otherwise>
	 	[% if ("button" == type) { %]
			<input title="[%= getAlternativeText() %]" disabled="yes" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %]_disabled[%=extension%]'); [%=getButtonImageStyle()%]"[% } %] id="[%= htmlButtonId %]" name="button:[%= getEventRuntimeId(event) %]" type="submit" value="<wr:Label context="event"/>">
		[% } else { %]
			[% if (linkStyle == "button" && "sort" != type) { %]
				<input title="[%= getAlternativeText() %]" disabled="yes" [%= styleClass ? "class=\"${styleClass}\"" : "" %] [% if (useImage) { %] style="background-image:url('[%=folder%][%= getIconName() %]_disabled[%=extension%]'); [%=getButtonImageStyle()%]"[% } %] id="[%= htmlId %]" type="button" value="<wr:Label context="event"/>">
			[% } else  { %]
				<table cellspacing="0" cellpadding="0" id="[%= htmlId %]">
					<tr>
						[% if (show == "text & icon") { %]
							<td title="[%= getAlternativeText() %]">
								<wr:Label context="event"/>
							</td>
						[% } %]
						[% if (useImage) { %]
							<td valign="middle">
								<img alt="[%= getAlternativeText() %]" title="[%= getAlternativeText() %]" src="[%=folder%][%= getIconName() %]_disabled[%=extension%]" border="0"/>
							</td>
						[% } %]	
						[% if (!useImage || show == "icon & text" || show == "text"){ %]
							<td title="[%= getAlternativeText() %]">
								<wr:Label context="event"/>
							</td>
						[% } %]
					</tr>
				</table>		
			[% } %]
		[% } %]
	 </c:otherwise>
  </c:choose>	 
 [% } else if(visibility == "hide" && disableCond == null){ %]
	</c:if>
 [% } %]
 [% } %]
 [% } %]
 