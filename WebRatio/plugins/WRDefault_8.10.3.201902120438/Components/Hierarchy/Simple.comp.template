#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the component is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>
[%
import org.apache.commons.lang.math.NumberUtils
import org.apache.commons.lang.StringUtils
setHTMLOutput()
def position = "level1"

def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]
def isScrollable = component["blockFactor"] != "" ? "true": "false"
def blockFactor = component["blockFactor"]
def firstEvent = component.selectSingleNode("layout:Event[contains(@event,'First')]")
def previousEvent = component.selectSingleNode("layout:Event[contains(@event,'Previous')]")
def blockEvent = component.selectSingleNode("layout:Event[contains(@event,'Block')]")
def nextEvent = component.selectSingleNode("layout:Event[contains(@event,'Next')]")
def lastEvent = component.selectSingleNode("layout:Event[contains(@event,'Last')]")
%]

[% 
def getIconPath(linkLayout) {
	folder = linkLayout.parameters["icon-folder"]
	name = StringUtils.defaultIfEmpty(linkLayout.parameters["icon-name"], linkLayout.contextElement?.attributeValue("name"))
	extension = linkLayout.parameters["icon-extension"]
	return getFilePath(folder, name, extension)
}
%]

[% // iterates recursively on the hierarchicalLevels
   def getSubLevelsLayout(hLevel, position, levelCount) { 
	  
	  def levelId = hLevel["id"]
	  position = position + ",level" + levelCount
	  def currentLevel = "level" + levelCount + "current"
%]
	<div class="HierarchyLevel">
	    <table cellpadding="0" cellspacing="0" width="100%">
			<c:forEach items="${level[%=levelCount -1 %]current.[%=levelId%]data}" var="level[%=levelCount%]current"
			    varStatus="level[%=levelCount%]status">
				<c:set var="level[%=levelCount%]" value="${level[%=levelCount%]status.index}" />
				<tr>
					<td valign="top">
						<img src="WRResources/spacer.gif" class="bullet" border="0"/>
					</td>
					<td>
						<table cellpadding="0" cellspacing="0" width="100%">
							<tr>
								<td>
									<table cellpadding="2" cellspacing="2" width="100%">
										<wr:Iterate var="attr" context="hLevel" select="layout:Attribute">
											<wr:Visible position="position">
												<tr>
													<th valign="top" nowrap="nowrap" align="left" class="<wr:StyleClass/> header">
														<wr:Label/>
													</th>
													<td style="padding-left:5px" align="left" class="<wr:StyleClass/> value">
														<wr:Value item="currentLevel" position="position"/>
													</td>
												</tr>
											</wr:Visible>
										</wr:Iterate>
										
										<wr:Iterate var="event" context="hLevel" select="layout:Event">
											<wr:Visible position="position">
												<tr>
													<td nowrap="nowrap" align="left" colspan="2">
														<wr:Value class="link" position="position"/>
													</td>
												</tr>
											</wr:Visible>
										</wr:Iterate>
									</table>
								</td>
							</tr>
							
							<tr>
								<wr:Iterate var="subLevel" context="hLevel" select="HierarchyLevel">
									[% def width = 100 %]
									<td valign="top" colspan="2" width="[%=width%]%">
										[% getSubLevelsLayout(subLevel, position, levelCount + 1) %]
									</td>
								</wr:Iterate>
							</tr>
						</table>
					</td>
				</tr>
			</c:forEach>
		</table>
	</div>
[% } %]


[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="component"/>) and (<wr:Id context="component"/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="component"/>) and (<wr:Id context="component"/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain Hierarchy">
			   [% if (isScrollable == "true") { %]
                    <c:if test="${<wr:Id context="component"/>.scroller.of gt [%= blockFactor %]}">
                        <table border="0" cellspacing="1" cellpadding="2">
                            <tr> 
                            	[% if (firstEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="firstEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.first}">
	                                                <wr:Event class="scroll" context="firstEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def firstEventLayout = getLayout(firstEvent, LayoutType.EVENT)
	                                                   if (firstEventLayout.parameters["show"] && (firstEventLayout.parameters["show"] == "icon" || firstEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(firstEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (firstEventLayout.parameters["show"] == "icon & text") { %]
	                                                            <td>
	                                                                <spring:message code="Hierarchy.First"/>
	                                                            </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.First"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
								[% if (previousEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="previousEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.previous}">
	                                                <wr:Event class="scroll" context="previousEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def previousEventLayout = getLayout(previousEvent, LayoutType.EVENT)
	                                                   if (previousEventLayout.parameters["show"] && (previousEventLayout.parameters["show"] == "icon" || previousEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(previousEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (previousEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Previous"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Previous"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                                <td class="scrollText" nowrap>${<wr:Id context="component"/>.scroller.from} <spring:message code="Hierarchy.To"/> ${<wr:Id context="component"/>.scroller.to} <spring:message code="Hierarchy.Of"/> ${<wr:Id context="component"/>.scroller.of}</td>
                                [% if (nextEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="nextEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.next}">
	                                                <wr:Event class="scroll" context="nextEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def nextEventLayout = getLayout(nextEvent, LayoutType.EVENT)
	                                                if (nextEventLayout.parameters["show"] && (nextEventLayout.parameters["show"] == "icon" || nextEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(nextEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (nextEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Next"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Next"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                               	[% if (lastEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="lastEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.last}">
	                                                <wr:Event class="scroll" context="lastEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def lastEventLayout = getLayout(lastEvent, LayoutType.EVENT)
	                                                if (lastEventLayout.parameters["show"] && (lastEventLayout.parameters["show"] == "icon" || lastEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(lastEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (lastEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Last"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Last"/></span>
	                                                [% } %] 
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                            </tr>
                            [% if (blockEvent) { %]
	                            <tr>  
	                                <td colspan="5" class="scrollText"> 
	                                    <wr:Visible context="blockEvent">
	                                        <span><spring:message code="Hierarchy.Jump"/></span>
	                                        <c:forEach var="current" varStatus="status" items="${<wr:Id context="component"/>.scroller.blocks}">
	                                            <c:set var="index" value="${status.index}"/>
	                                            <span class="jump">
	                                                <c:choose>
	                                                    <c:when test="${current ne <wr:Id context="component"/>.scroller.current}">
	                                                        <a class="<wr:StyleClass context="blockEvent"/> link" href="<wr:URL context="blockEvent"/>" onclick="<wr:AjaxURL context="blockEvent" />">${current}</a>
	                                                    </c:when>
	                                                    <c:otherwise>
	                                                        ${current}
	                                                    </c:otherwise>
	                                                </c:choose>
	                                            </span>
	                                        </c:forEach> 
	                                    </wr:Visible>
	                                </td>
	                            </tr>
                            [% } %]
                        </table>
                    </c:if>
                [%}%]
				<table cellpadding="2" cellspacing="2">
					<c:forEach var="level1current" varStatus="level1status" items="${<wr:Id context="component"/>.data}">
						<c:set var="level1" value="${level1status.index}" />
						<c:choose>
						   <c:when test="${<wr:Id context="component"/>.currentIndex eq level1}"><c:set var="currentCSS" value="Current"/></c:when>
						   <c:otherwise><c:set var="currentCSS" value=""/></c:otherwise>   
						</c:choose>	
						<tr class="row${currentCSS}">
							<td valign="top">
								<img src="WRResources/spacer.gif" class="bullet" border="0"/>
							</td>
							<td valign="top">
								<table width="100%">
									<wr:Iterate var="attr" context="component" select="layout:Attribute">
										<wr:Visible position="position">
											<tr>
												<th nowrap="nowrap" align="left" class="<wr:StyleClass/> header">
													<wr:Label/>
												</th>
												<td style="padding-left:5px" align="left" class="<wr:StyleClass/> value">
													<wr:Value item="'level1current'" position="position"/>
												</td>
											</tr>
										</wr:Visible>
									</wr:Iterate>
									
									<wr:Iterate var="event" context="component" select="layout:Event[string(@sort) != 'true' and string(@scroll) != 'true']">
										<wr:Visible position="position">
											<tr>
												<td nowrap="nowrap" align="left" colspan="2">
													<wr:Value class="link" position="position"/>
												</td>
											</tr>
										</wr:Visible>
									</wr:Iterate>
									
									<tr>
										<wr:Iterate var="hLevel" context="component" select="HierarchyLevel">
											[% def width = 100 %]
											<td valign="top" colspan="2" width="[%=width%]%">
												[% getSubLevelsLayout(hLevel, "level1", 2) %]
											</td>
										</wr:Iterate>
									</tr>
								</table>
							</td>
						</tr>
					</c:forEach>
				</table>
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain Hierarchy">
				<table>
					<tr>
						<td><spring:message code="[%printJSPTagValue(emptyUnitMessage)%]"/></td>
					</tr>
				</table>
			</div>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]