#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show First Attributes Name" name="show-first-attribute-name" type="enum" values="top|left|none" default="left">
Defines the rendition of the first level attributes names.
Allowed values are:
- top (default): places the labels on the top
- right: places the labels on the right
- none: no labels are shown
</wr:LayoutParameter>
<wr:LayoutParameter label="First Level Links Orientation" name="first-level-link-orientation" type="enum" values="horizontal|vertical" default="horizontal">
Defines the orientation of the first level links.
Allowed values are:
- horizontal (default): places the links on the
same line one next to the other
- vertical: places one link per line
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Sub Levels Icon" name="show-branch-icon" type="boolean" default="true">
Defines the rendition of an icon on the left of 
the sub levels. 
Allowed values are: true (default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Sub Attributes Name" name="show-branch-attribute-name" type="enum" values="top|left|none" default="left">
Defines the rendition of the sub levels attributes names.
Allowed values are:
- left (default): places the labels on the left
- top: places the labels on the top
- none: no labels are shown
</wr:LayoutParameter>
<wr:LayoutParameter label="Sub Level Links Orientation" name="branch-link-orientation" type="enum" values="horizontal|vertical" default="horizontal">
Defines the orientation of the first level links.
Allowed values are:
- horizontal (default): places the links on the
same line one next to the other
- vertical: places one link per line
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the component is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>
[%
import org.apache.commons.lang.StringUtils

setHTMLOutput()
def unitId = component["id"]

def showFirstAttributeName = params["show-first-attribute-name"]
def firstLevelLinkOrientation = params["first-level-link-orientation"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]
def position = "level1"

def isScrollable = component["blockFactor"] != "" ? "true": "false"
def blockFactor = component["blockFactor"]
def firstEvent = component.selectSingleNode("layout:Event[contains(@event,'First')]")
def previousEvent = component.selectSingleNode("layout:Event[contains(@event,'Previous')]")
def blockEvent = component.selectSingleNode("layout:Event[contains(@event,'Block')]")
def nextEvent = component.selectSingleNode("layout:Event[contains(@event,'Next')]")
def lastEvent = component.selectSingleNode("layout:Event[contains(@event,'Last')]")
%]

[% 
def getIconPath(linkLayout) {
	folder = linkLayout.parameters["icon-folder"]
	name = StringUtils.defaultIfEmpty(linkLayout.parameters["icon-name"], linkLayout.contextElement?.attributeValue("name"))
	extension = linkLayout.parameters["icon-extension"]
	return getFilePath(folder, name, extension)
}
%]

[% // iterates recursively on the hierarchicalLevels
   def getSubLevelsLayout(hLevel, position, levelCount) { 
	  def showBranchIcon = params["show-branch-icon"]
	  def showBranchAttributeName = params["show-branch-attribute-name"]
	  def branchLinkOrientation = params["branch-link-orientation"]
	  
	  def currentLevel = "level" + levelCount + "current"
	  
	  def levelId = hLevel["id"]
	  position = position + ",level" + levelCount
%]
<div class="HierarchyLevel">
	<table cellpadding="1" cellspacing="1" width="100%">
		<c:forEach items="${level[%=levelCount - 1 %]current.[%=levelId%]data}" var="level[%=levelCount%]current"
			varStatus="level[%=levelCount%]status">
		  <c:set var="level[%=levelCount%]" value="${level[%=levelCount%]status.index}" />
		  <tr>
		  	[% if (showBranchIcon == "true") { %]
				<td valign="top">
					<img src="WRResources/spacer.gif" class="bullet" border="0"/>
				</td>
			[% } %]
			[% if (showBranchIcon == "false") {%]
				<td style="width:10px" />
			[% } %]
				<td>
					<table cellpadding="1" cellspacing="1" width="100%">
						<wr:Iterate var="attr" context="hLevel" select="layout:Attribute">
						  [% if (showBranchAttributeName == "top") {%]
						  <tr>
							<th nowrap="nowrap" class="<wr:StyleClass/> header">
								<wr:Label/>
							</th>
						  </tr>
						  [% } %]
						  <tr>
							[% if (showBranchAttributeName == "left") {%]
							<th nowrap="nowrap" class="<wr:StyleClass/> header">
								<wr:Label/>
							</th>
							[% } %]
							<td align="left" class="<wr:StyleClass/> value">
								<wr:Value item="currentLevel" position="position"/>
							</td>
						  </tr>
						</wr:Iterate>
						[% if (!hLevel.selectNodes("layout:Event").empty) { %]
							<tr>
								<td [% if (showBranchAttributeName == "left") {%] colspan="2" [% } %]>
									<table cellspacing="1" cellpadding="1">
										[% if (branchLinkOrientation == "horizontal") {%]
											<tr>
										[% } %]
										 <wr:Iterate var="event" context="hLevel" select="layout:Event">
											[% if (branchLinkOrientation == "vertical") {%]
											<tr>
											[% } %]
												<td nowrap="nowrap">
												[% def visibility = getInaccessibleEventPolicy(event)
										            if ( visibility == "" || visibility == "hide") { %]
													<c:if test="${webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext)}">
												[% } else if (visibility == "inactive") { %]
											        <c:choose>
											           <c:when test="${webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext)}">
										        [% } %]										
														 <a class="<wr:StyleClass/> link"
														   href="<wr:URL context="event" position="position"/>" [%if (event["newWindow"] == "true") { %] target="_blank" [% } %] onclick="<wr:AjaxURL context="event" position="position"/>">
														     <wr:Label/>
														 </a>
										         [% if (visibility == "inactive") { %]
											         </c:when>
													 <c:otherwise>
													  <span class="<wr:StyleClass/> value">
													    <wr:Label/>
													  <span>
											    	 </c:otherwise>
												[% } %]	
												[% if ( visibility == "" || visibility == "hide") { %]
													</c:if>
												[% } else if (visibility == "inactive") { %]
													</c:choose>
												[% } %]
												</td>
											[% if (branchLinkOrientation == "vertical") {%]
											</tr>
											[% } %]
										</wr:Iterate>
										[% if (branchLinkOrientation == "horizontal") {%]
											</tr>
										[% } %]
									</table>
								</td>
							</tr>
						[% } %]
						<wr:Iterate var="subLevel" context="hLevel" select="HierarchyLevel">
							<tr>
								<td [% if (showBranchAttributeName == "left") {%] colspan="2" [% } %]>
									[% getSubLevelsLayout(subLevel, position, levelCount + 1) %]
								</td>
							</tr>
						</wr:Iterate>
					</table>
				</td>
			</tr>
		</c:forEach>
	</table>
</div>
[% } %]


[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="component"/>) and (<wr:Id context="component"/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="component"/>) and (<wr:Id context="component"/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
	  <div class="plain <wr:StyleClass/>">
			<div class="plain Hierarchy">
			    [% if (isScrollable == "true") { %]
                    <c:if test="${<wr:Id context="component"/>.scroller.of gt [%= blockFactor %]}">
                        <table border="0" cellspacing="1" cellpadding="2">
                            <tr> 
                                [% if (firstEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="firstEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.first}">
	                                                <wr:Event class="scroll" context="firstEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def firstEventLayout = getLayout(firstEvent, LayoutType.EVENT)
	                                                   if (firstEventLayout.parameters["show"] && (firstEventLayout.parameters["show"] == "icon" || firstEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(firstEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (firstEventLayout.parameters["show"] == "icon & text") { %]
	                                                            <td>
	                                                                <spring:message code="Hierarchy.First"/>
	                                                            </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.First"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                                [% if (previousEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="previousEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.previous}">
	                                                <wr:Event class="scroll" context="previousEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def previousEventLayout = getLayout(previousEvent, LayoutType.EVENT)
	                                                   if (previousEventLayout.parameters["show"] && (previousEventLayout.parameters["show"] == "icon" || previousEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(previousEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (previousEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Previous"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Previous"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                                <td class="scrollText" nowrap>${<wr:Id context="component"/>.scroller.from} <spring:message code="Hierarchy.To"/> ${<wr:Id context="component"/>.scroller.to} <spring:message code="Hierarchy.Of"/> ${<wr:Id context="component"/>.scroller.of}</td>
                                [% if (nextEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="nextEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.next}">
	                                                <wr:Event class="scroll" context="nextEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def nextEventLayout = getLayout(nextEvent, LayoutType.EVENT)
	                                                if (nextEventLayout.parameters["show"] && (nextEventLayout.parameters["show"] == "icon" || nextEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(nextEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (nextEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Next"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Next"/></span>
	                                                [% } %]
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                                [% if (lastEvent) { %]
	                                <td class="scrollText">
	                                    <wr:Visible context="lastEvent">
	                                        <c:choose>
	                                            <c:when test="${<wr:Id context="component"/>.scroller.current ne <wr:Id context="component"/>.scroller.last}">
	                                                <wr:Event class="scroll" context="lastEvent"/>
	                                            </c:when>
	                                            <c:otherwise>
	                                                [% def lastEventLayout = getLayout(lastEvent, LayoutType.EVENT)
	                                                if (lastEventLayout.parameters["show"] && (lastEventLayout.parameters["show"] == "icon" || lastEventLayout.parameters["show"] == "icon & text")) { %]
	                                                    <table cellspacing="0" cellpadding="0">
	                                                        <tr>
	                                                            <td valign="middle">
	                                                                <img src="[%=getIconPath(lastEventLayout) %]" border="0"/>
	                                                            </td>
	                                                            [% if (lastEventLayout.parameters["show"] == "icon & text") { %]
	                                                                <td>
	                                                                    <spring:message code="Hierarchy.Last"/>
	                                                                </td>
	                                                            [% } %]
	                                                        </tr>
	                                                    </table>
	                                                [% } else { %]
	                                                    <span><spring:message code="Hierarchy.Last"/></span>
	                                                [% } %] 
	                                            </c:otherwise>
	                                        </c:choose>
	                                    </wr:Visible>
	                                </td>
                                [% } %]
                            </tr>
                            [% if (blockEvent) { %]
	                            <tr>  
	                                <td colspan="5" class="scrollText"> 
	                                    <wr:Visible context="blockEvent">
	                                        <span><spring:message code="Hierarchy.Jump"/></span>
	                                        <c:forEach var="current" varStatus="status" items="${<wr:Id context="component"/>.scroller.blocks}">
	                                            <c:set var="index" value="${status.index}"/>
	                                            <span class="jump">
	                                                <c:choose>
	                                                    <c:when test="${current ne <wr:Id context="component"/>.scroller.current}">
	                                                        <a class="<wr:StyleClass context="blockEvent"/> link" href="<wr:URL context="blockEvent"/>" onclick="<wr:AjaxURL context="blockEvent" />">${current}</a>
	                                                    </c:when>
	                                                    <c:otherwise>
	                                                        ${current}
	                                                    </c:otherwise>
	                                                </c:choose>
	                                            </span>
	                                        </c:forEach> 
	                                    </wr:Visible>
	                                </td>
	                            </tr>
                            [% } %]
                        </table>
                    </c:if>
                [%}%]
				<table cellpadding="1" cellspacing="1">
					<c:forEach var="level1current" varStatus="level1status" items="${<wr:Id context="component"/>.data}">
						<c:set var="level1" value="${level1status.index}" />
						<c:choose>
						   <c:when test="${<wr:Id context="component"/>.currentIndex eq level1}"><c:set var="currentCSS" value="Current"/></c:when>
						   <c:otherwise><c:set var="currentCSS" value=""/></c:otherwise>   
						</c:choose>	
						<tr class="row${currentCSS}">
							<td>
								<table cellpadding="1" cellspacing="1" width="100%">
									<wr:Iterate var="attr" context="component" select="layout:Attribute">
									[%	if(showFirstAttributeName ==  "top"){ %]
											<tr>
												<th nowrap="nowrap" class="<wr:StyleClass/> header">
												<wr:Label/>
												</th>
											</tr>
										[% } %]
										<tr>
										[% if(showFirstAttributeName ==  "left"){ %]
											<th nowrap="nowrap" class="<wr:StyleClass/> header">
												<wr:Label/>
										    </th>
										[% } %]
											<td class="<wr:StyleClass/> value">
												<wr:Value item="'level1current'" position="position"/>
											</td>
										</tr>
									</wr:Iterate> 
									
									[% if (!component.selectNodes("layout:Event[string(@sort) != 'true' and string(@scroll) != 'true']").empty) {%]
										<tr>
										  <td [% if (showFirstAttributeName == "left") {%] colspan="2"  [% } %]>
											 <table cellspacing="1" cellpadding="1">
												[% if (firstLevelLinkOrientation == "horizontal") {%]
													<tr>
												[% } %]
													 <wr:Iterate var="event" context="component" select="layout:Event[string(@sort) != 'true' and string(@scroll) != 'true']">
														[% if (firstLevelLinkOrientation == "vertical") {%]
														<tr>
														[% } %]
															<td nowrap="nowrap">
															[% def visibility = getInaccessibleEventPolicy(event)
													            if ( visibility == "" || visibility == "hide" ) { %]
																<c:if test="${webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext)}">
															[% } else if (visibility == "inactive") { %]
														        <c:choose>
														           <c:when test="${webratio:isTargetAccessible('[%=getEventRuntimeId(event)%]', pageContext)}">
													        [% } %]										
																	 <a class="<wr:StyleClass/> link"
																	   href="<wr:URL context="event" position="position"/>" [%if (event["newWindow"] == "true") { %] target="_blank" [% } %] onclick="<wr:AjaxURL context="event" position="position"/>">
																	     <wr:Label/>
																	 </a>
													         [% if (visibility == "inactive") { %]
														         </c:when>
																 <c:otherwise>
																  <span class="<wr:StyleClass/> value">
																    <wr:Label/>
																  <span>
														    	 </c:otherwise>
															[% } %]	
															[% if ( visibility == "" || visibility == "hide") { %]
																</c:if>
															[% } else if (visibility == "inactive") { %]
																</c:choose>
															[% } %]
															</td>
														[% if (firstLevelLinkOrientation == "vertical") {%]
														</tr>
														[% } %]
													</wr:Iterate>
												[% if(firstLevelLinkOrientation == "horizontal") {%]
													</tr>
												[% } %]
												</table>
											</td>
										</tr>
									[% } %]
									<wr:Iterate var="hLevel" context="component" select="HierarchyLevel">
									   
										<tr>
											<td [% if (showFirstAttributeName == "left") {%] colspan="2" [% } %]>
											   [% getSubLevelsLayout(hLevel, "level1", 2) %]
											</td>
										</tr>
								  </wr:Iterate>
								</table>
							</td>
						</tr>
					</c:forEach>
				</table>
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain Hierarchy">
				<table>
				    <tr>
				      <td><spring:message code="[%printJSPTagValue(emptyUnitMessage)%]"/></td>
				    </tr>
				</table>
			</div>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]  