#?delimiters <%,%>,<%=,%>
<%
setXMLOutput()
def componentId = component["id"]
def classId = component["dataBinding"]
def domainClass = getById(classId)
%>
<InputParameters>
<InputParameter name="<%=component["id"]%>.maxResults" label="Max Results" mandatory="false"/>
<% for (cond in component.selectNodes("ConditionalExpression/*")) { 
   if (cond.name == "AssociationRoleCondition" && cond["role"]) { 
     for (a in getKeyAttributes(getSourceDomainClass(getRoleByExpression(cond["role"])))) { %>
      <InputParameter 
          name="<%=cond["id"]%>.<%=a["id"]%>"
          refId="<%=cond["id"]%>"
          type="<%=getAssignableTypeExpression(getSourceDomainClass(getRoleByExpression(cond["role"])), a, true, true)%>"
          label="<%=getRoleConditionLabel(cond, a)%>"
          mandatory="<%=isRequiredConditionalExpressionPart(cond)%>"/>
    <% } 
   } else if (cond.name == "AttributesCondition" && cond["attributes"]) { 
      def predicate = cond["predicate"] 
      if ((cond["value"] == "") && !isUnaryPredicate(predicate)) { %>
       <InputParameter
          name="<%=cond["id"]%>"
          refId="<%=cond["id"]%>"
          type="<%=cond["attributes"].tokenize(" ").collect{classId + "." + it}.join("|")%>"
          label="<%=getAttributesConditionLabel(cond)%>"
          mandatory="<%=isRequiredConditionalExpressionPart(cond)%>"/>
    <% } 
   } else if (cond.name == "KeyCondition") { 
      for (a in getKeyAttributes(domainClass)) { %>
       <InputParameter 
          name="<%=cond["id"]%>.<%=a["id"]%>"
          refId="<%=cond["id"]%>"
          type="<%=getAssignableTypeExpression(domainClass, a, true, true)%>"
          label="<%=getKeyConditionLabel(cond, domainClass, a)%>"
          mandatory="<%=isRequiredConditionalExpressionPart(cond)%>"/>
    <% } 
   } 
 } %>
</InputParameters>