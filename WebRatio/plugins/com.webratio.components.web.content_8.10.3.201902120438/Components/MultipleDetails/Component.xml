<?xml version="1.0" encoding="UTF-8"?>

<Component type="content" formBased="false" idPrefix="mdu" namePrefix=" MultipleDetails " label="Multiple Details" dataFlowSource="true" navigationFlowSource="true" dataFlowTarget="true" navigationFlowTarget="true"  errorFlowTarget="true"  successFlowTarget="true" canPlaceLayoutComponent="true" canPlaceLayoutEvents="true"> 
  <DomainClassProperty attributeName="dataBinding" includeDerived="true" figureDisplayOrder="1"> 
    <Description xml:space="preserve">The class from which the content of the component is drawn.</Description> 
  </DomainClassProperty>  
  <ConditionalExpression classIdExpr="../../@dataBinding" elementName="ConditionalExpression" defaultPolicy="true" figureDisplayOrder="2"> 
    <Description xml:space="preserve">The set of selection criteria that retrieves the instances of the class of the component.</Description> 
  </ConditionalExpression>  
  <AttributesProperty classIdExpr="@dataBinding" attributeName="displayAttributes" includeDerived="true" enabledImportExtraAttributes="true"> 
    <Description xml:space="preserve">The list of class attributes displayed by the component.</Description>  
    <IsEnabled>return (element["dataBinding"] != "")</IsEnabled> 
  </AttributesProperty>  
  <SortAttributesProperty label="Sort Attributes" elementName="SortAttribute" attributeName="attribute" classIdExpr="@dataBinding" attributeIdsExpr="@displayAttributes"> 
    <Description xml:space="preserve">The sorting criteria used to display the objects in the multiple details.</Description>  
    <IsEnabled>return (element["dataBinding"] != "")</IsEnabled> 
  </SortAttributesProperty>  
  <IntegerProperty attributeName="maxResults"> 
    <Description xml:space="preserve">The maximum number of rows to retrieve.
If unspecified, all rows are retrieved.</Description> 
  </IntegerProperty>  
  <BooleanProperty attributeName="distinct"> 
    <Description xml:space="preserve">If checked, objects with duplicate attribute values are removed
from the content of the multiple details.</Description> 
  </BooleanProperty>  
  <Description xml:space="preserve">Multiple details components present multiple instances of the same class on the same page, 
by repeating the presentation of several detail components. 
A multiple detail specification consists of two parts:
&lt;ul&gt;
  &lt;li&gt;The specification of the class to which the component refers and, optionally, 
of a conditional expression used to restrict the set of instances contributing to the content 
of the component.&lt;/li&gt;
  &lt;li&gt;The selection of the attributes to be included in the component.&lt;/li&gt;
&lt;/ul&gt;</Description>  
  <InputDescription xml:space="preserve" name="Condition-Name">The parameter associated to one of the Conditional Expressions
of the component.</InputDescription>  
  <OutputDescription xml:space="preserve" name="Attribute-Name">The values for one of the class attributes of the objects displayed
in the Multiple Details.</OutputDescription>  
  <OutputDescription xml:space="preserve" name="ForeignKey-Name">The values for one of the foreign key attributes of the objects 
connected to the extracted objects.</OutputDescription>  
  <OutputDescription xml:space="preserve" name="Data Size">The number of class state objects retrieved by the query.</OutputDescription>  
  <LayoutAttributes xml:space="preserve">return component.attributeValue("displayAttributes", "").tokenize(" ")</LayoutAttributes>  
  <IsContextFreeComponent xml:space="preserve">return getIncomingFlows(component).empty</IsContextFreeComponent>  
  <IsMultiConditionComponent xml:space="preserve">if (getIncomingFlows(component).size() &lt;= 1) {
    return false
}

def sel = component.element("ConditionalExpression")
if(sel == null){
  return false
}
def count = sel.elements("AssociationRoleCondition").size() + sel.elements("KeyCondition").size()
for (cond in sel.elements("AttributesCondition")) {
    def pred = cond["predicate"]
    if ((cond["value"] == "") &amp;&amp; !isUnaryPredicate(pred)) {
        count++
    }
}
return count &gt; 1</IsMultiConditionComponent>  
  <BeanDescription xml:space="preserve">
	&lt;p&gt;The component state object for the Multiple Details depends on the class the component is based on. For the Multiple Details based on the 
	class &lt;i&gt;Product&lt;/i&gt; of Acme application, the component state object consists of the following properties:
	   &lt;ul&gt;
  		&lt;li&gt;&lt;code&gt;int dataSize&lt;/code&gt;: the number of class state objects&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] data&lt;/code&gt;: the array of class state objects&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] OIDArray&lt;/code&gt;: the array of the &lt;i&gt;oid&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] codeArray&lt;/code&gt;: the array of the &lt;i&gt;code&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] descriptionArray&lt;/code&gt;: the array of the &lt;i&gt;description&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] nameArray&lt;/code&gt;: the array of the &lt;i&gt;name&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] priceArray&lt;/code&gt;: the array of the &lt;i&gt;price&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] thumbnailArray&lt;/code&gt;: the array of the &lt;i&gt;thumbnail&lt;/i&gt; attribute values&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object[] highlightedArray&lt;/code&gt;: the array of the &lt;i&gt;highlighted&lt;/i&gt; attribute values&lt;/li&gt;
  	   &lt;/ul&gt;
	&lt;/p&gt;
	&lt;p&gt;The class state object has the following properties:
	   &lt;ul&gt;
  		&lt;li&gt;&lt;code&gt;Integer OID&lt;/code&gt;: the value of the &lt;i&gt;oid&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Integer code&lt;/code&gt;: the value of the &lt;i&gt;code&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;String description&lt;/code&gt;: the value of the &lt;i&gt;description&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;String name&lt;/code&gt;: the value of the &lt;i&gt;name&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Double price&lt;/code&gt;: the value of the &lt;i&gt;price&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Object thumbnail&lt;/code&gt;: the value of the &lt;i&gt;thumbnail&lt;/i&gt; attribute&lt;/li&gt;
  		&lt;li&gt;&lt;code&gt;Boolean highlighted&lt;/code&gt;: the value of the &lt;i&gt;highlighted&lt;/i&gt; attribute&lt;/li&gt;
  	   &lt;/ul&gt;
	&lt;/p&gt;
</BeanDescription> </Component>