{
  "CollectionValidationRule.in" : "the value must be one of: ${values}",
  "CollectionValidationRule.in.query" : "the value is not included in the list of valid values",
  "CollectionValidationRule.notIn" : "the value must not be one of: ${values}",
  "CollectionValidationRule.notIn.query" : "the value is included in the list of forbidden values",
  "CompareValidationRule.eq" : "the value must be equal to ${value}",
  "CompareValidationRule.eq.property" : "the value must be equal to the value of '${otherPropertyName}'",
  "CompareValidationRule.gt" : "the value must be greater than ${value}",
  "CompareValidationRule.gt.property" : "the value must be greater than the value of '${otherPropertyName}'",
  "CompareValidationRule.gteq" : "the value must be greater than or equal to ${value}",
  "CompareValidationRule.gteq.property" : "the value must be greater than or equal to the value of '${otherPropertyName}'",
  "CompareValidationRule.lt" : "the value must be smaller than ${value}",
  "CompareValidationRule.lt.property" : "the value must be smaller than the value of '${otherPropertyName}'",
  "CompareValidationRule.lteq" : "the value must be smaller than or equal to ${value}",
  "CompareValidationRule.lteq.property" : "the value must be smaller than or equal to the value of '${otherPropertyName}'",
  "CompareValidationRule.neq" : "the value must be different from ${value}",
  "CompareValidationRule.neq.property" : "the value must be different from the value of '${otherPropertyName}'",
  "CreditCardValidationRule.error" : "the value is not a valid credit card number",
  "EMailValidationRule.error" : "the value is not a valid email address",
  "FormNotEmptyValidationRule.error" : "at least one field must be filled",
  "LikeValidationRule.beginsWith" : "the value must begin with ${value}",
  "LikeValidationRule.beginsWith.property" : "the value must begin with the value of '${otherPropertyName}'",
  "LikeValidationRule.contains" : "the value must contain ${value}",
  "LikeValidationRule.contains.property" : "the value must contain the value of '${otherPropertyName}'",
  "LikeValidationRule.endsWith" : "the value must end with ${value}",
  "LikeValidationRule.endsWith.property" : "the value must end with the value of '${otherPropertyName}'",
  "LikeValidationRule.notBeginsWith" : "the value must not begin with ${value}",
  "LikeValidationRule.notBeginsWith.property" : "the value must not begin with the value of '${otherPropertyName}'",
  "LikeValidationRule.notContains" : "the value must not contain ${value}",
  "LikeValidationRule.notContains.property" : "the value must not contain the value of '${otherPropertyName}'",
  "LikeValidationRule.notEndsWith" : "the value must not end with ${value}",
  "LikeValidationRule.notEndsWith.property" : "the value must not end with the value of '${otherPropertyName}'",
  "MandatoryValidationRule.error" : "mandatory value",
  "RegularExpressionValidationRule.error" : "the value is not valid",
  "ValueLengthValidationRule.blob.eq" : "the file size must be ${length}",
  "ValueLengthValidationRule.blob.max" : "the file size exceeds ${length}",
  "ValueLengthValidationRule.blob.min" : "the file size must be greater than ${length}",
  "ValueLengthValidationRule.blob.neq" : "the file size is not allowed ${length}",
  "ValueLengthValidationRule.eq" : "the value length must be ${length} characters",
  "ValueLengthValidationRule.max" : "the value length must be at most ${length} characters",
  "ValueLengthValidationRule.min" : "the value length must be at least ${length} characters",
  "ValueLengthValidationRule.neq" : "the value length must be different from ${length} characters",
  "dialog.button.Cancel" : "Cancel",
  "dialog.button.Continue" : "Continue",
  "dialog.button.Exit" : "Exit",
  "dialog.button.OK" : "OK",
  "dialog.button.Reset" : "Reset",
  "dialog.button.Retry" : "Retry",
  "dialog.title.error" : "Error",
  "dialog.title.warning" : "Warning",
  "emptyComponentMessage" : "No Results",
  "event.Back" : "Back",
  "event.Home" : "Home",
  "loginDialog.title" : "Login",
  "notification.activityProgress" : "Loading...",
  "notification.blobOpenError" : "This file cannot be opened.",
  "notification.genericError" : "An error occurred.",
  "notification.loginProgress" : "Authenticating...",
  "notification.synchronizationError" : "Data synchronization failed.",
  "notification.synchronizationForbidden" : "Access denied: please login again.",
  "notification.synchronizationNetworkError" : "Problems connecting to the network. Please try again later.",
  "notification.synchronizationNetworkUnavailable" : "Network unavailable. Please check your network connection and try again.",
  "notification.synchronizationProgress" : "Synchronizing data...",
  "notification.updateError" : "Update failed due to internal error.",
  "notification.updateProgress" : "Updating...",
  "typeValidation.date" : "the value must be a valid date",
  "typeValidation.decimal" : "the value must be a valid number",
  "typeValidation.float" : "the value must be a valid float",
  "typeValidation.integer" : "the value must be a valid integer",
  "typeValidation.time" : "the value must be a valid time",
  "typeValidation.timestamp" : "the value must be a valid timestamp",
  "update.loginDialog.message" : "Please enter your credentials to continue with the update.",
  "update.networkDialog.message" : "Network connectivity is required for performing this update. Please check your network and try again.",
  "update.resetDialog.message" : "Some local changes are yet to be synchronized with the server. Resetting will cause all changes to be lost."
}